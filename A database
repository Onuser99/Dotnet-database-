//create a database//
private void Form_Load(object sender, EventArgs e)
{
    dataGridView1.DataSource = GetEmployeeData();
}

// Method to fetch data from the Employee table
private DataTable GetEmployeeData()
{
    DataTable dt = new DataTable();
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        string selectQuery = "SELECT * FROM Employee";
        using (SqlDataAdapter adapter = new SqlDataAdapter(selectQuery, connection))
        {
            adapter.Fill(dt);
        }
    }
    return dt;
}

//2.Create table employee along with primary key Constraint//
using (SqlConnection connection = new SqlConnection(connectionString))
{
    connection.Open();
    string createTableQuery = "CREATE TABLE Employee (Id INT PRIMARY KEY, Name VARCHAR(255), etc)";
    using (SqlCommand command = new SqlCommand(createTableQuery, connection))
    {
        command.ExecuteNonQuery();
    }
}

//
using (SqlConnection connection = new SqlConnection(connectionString))
{
    connection.Open();
    string selectQuery = "SELECT * FROM Employee";
    using (SqlCommand command = new SqlCommand(selectQuery, connection))
    {
        using (SqlDataReader reader = command.ExecuteReader())
        {
            while (reader.Read())
            {
                Console.WriteLine($"Id: {reader["Id"]}, Name: {reader["Name"]}");
                // Print other properties as needed
            }
        }
    }
}
//


// Assuming you have a method to get an employee by Id
Employee GetEmployeeById(int id)
{
    // Implementation to retrieve employee by Id from the database
}

// Update method with validation
void UpdateEmployee(Employee updatedEmployee)
{
    // Validate the updatedEmployee data
    if (updatedEmployee != null && updatedEmployee.Id > 0)
    {
        // Retrieve the existing employee
        Employee existingEmployee = GetEmployeeById(updatedEmployee.Id);

        if (existingEmployee != null)
        {
            // Perform the update
            // Update the employee in the database
        }
        else
        {
            Console.WriteLine("Employee not found for the given Id.");
        }
    }
    else
    {
        Console.WriteLine("Invalid employee data.");
    }
}

//

private void Form_Load(object sender, EventArgs e)
{
    dataGridView1.DataSource = GetEmployeeData();
}

// Method to fetch data from the Employee table
private DataTable GetEmployeeData()
{
    DataTable dt = new DataTable();
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        string selectQuery = "SELECT * FROM Employee";
        using (SqlDataAdapter adapter = new SqlDataAdapter(selectQuery, connection))
        {
            adapter.Fill(dt);
        }
    }
    return dt;
}
